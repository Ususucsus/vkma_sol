{"version":3,"sources":["utils.js","panels/CreateCardPanel.js","comps/CardInfoPlaceholder.js","panels/CardInfoPanel.js","panels/ContactsPanel.js","App.js","index.js"],"names":["getGWordSuffix","n","formatLess100","formatLess20","getMWordSuffix","formatLess100M","formatLess20M","CreateCardPanel","props","onCardIdChanged","e","value","target","isCardIdContainsOnlyDigits","length","setState","inputCardId","errorHeader","onMobileChanges","isMobileContainsDigitsOrSpecialSymbols","inputMobile","onAddClick","state","cardId","cardid","even_sum","odd_sum","i","s","control","formatCardId","mobile","m","replace","slice","trimMobile","updateCard","errorMessage","test","this","id","left","onClick","window","history","back","header","mode","top","onChange","placeholder","size","React","Component","CardInfoPlaceholder","style","textAlign","marginTop","width","marginLeft","marginRight","marginBottom","color","level","weight","goToPanel","CardInfoPanel","toggleContext","pv","contextOpened","generateModal","minutes","expireDate","accessibleFor","activeModal","onClose","IS_PLATFORM_ANDROID","right","IS_PLATFORM_IOS","formatAccessibleFor","disabled","card","smCells","sm","cell","key","after","addToHistory","changeModal","push","pCells","p","description","aside","transform","opened","before","ContactsPanel","changeSnackbar","text","snackbar","href","bridge","send","App","changePopout","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","console","log","Promise","resolve","reject","fetch","then","result","ok","status","json","catch","err","load","actions","title","autoclose","changePanel","panel","activePanel","popout","modal","pushState","goBack","last","pop","scheme","addEventListener","subscribe","detail","type","data","keys","isWebView","onSwipeBack","ReactDOM","render","document","getElementById","default"],"mappings":"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","file":"static/js/main.bee3f4f6.chunk.js","sourcesContent":["export function load(cardid, mobile) {\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  myHeaders.append(\"Accept\", \"application/json\");\n  \n  var raw = JSON.stringify({\"cardid\":cardid, \"mobile\":mobile});\n  \n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n    mode: \"cors\",\n  };\n\n  console.log(raw);\n\n  return new Promise((resolve, reject) => {\n    //resolve(JSON.parse('{\"Name\": \"Artur\", \"SurName\": \"Usmanov\", \"Mobile\": \"\", \"Birthday\": \"14.04.2001\", \"CardId\": \"8888888123456\", \"SaleMinutes\": [{\"Minutes\": 100}], \"Presents\": [], \"IsDisabled\": true, \"Sale\": 2, \"SaleComment\": \"test\", \"Money\": 341, \"TotalMinutes\": 888 }'));\n    fetch(\"https://rscradik.asuscomm.com:5001/api/getRecord/\", requestOptions)\n      .then(result => {\n        if (result.ok === false)\n          reject(result.status);\n\n        return result.json();\n      })\n      .then(json => {\n        console.log(json);\n        resolve(json);\n      })\n      .catch(err => {\n        reject(\"error\")\n      })\n  })\n}\n\nexport function toShortCardId(cardId) {\n  if (cardId.length !== 13) return cardId;\n  return cardId.slice(7, 12);\n}\n\nexport function getGWordSuffix(n) {\n  if (n <= 100) return formatLess100(n);\n  if (n > 100) return formatLess100(n % 100);\n}\n\nfunction formatLess20(n) {\n  if (n === 0) return \"\";\n  if (n === 1) return \"а\";\n  if (2 <= n && n <= 4) return \"ы\";\n  if (5 <= n && n <= 20) return \"\";\n}\n\nfunction formatLess100(n) {\n  if (n <= 20) return formatLess20(n);\n  if (21 <= n <= 100) return formatLess20(n % 10);\n}\n\nexport function getMWordSuffix(n) {\n  if (n <= 100) return formatLess100M(n);\n  if (n > 100) return formatLess100M(n % 100);\n}\n\nfunction formatLess20M(n) {\n  if (n === 0) return \"ов\";\n  if (n === 1) return \"\";\n  if (2 <= n && n <= 4) return \"а\";\n  if (5 <= n && n <= 20) return \"ов\";\n}\n\nfunction formatLess100M(n) {\n  if (n <= 20) return formatLess20M(n);\n  if (21 <= n <= 100) return formatLess20M(n % 10);\n}\n\nexport function trimMobile(mobile) {\n  let m = mobile.replace(/-/g, '').replace(/\\(/g, '').replace(/\\)/g, '').replace(/ /g, '');\n  if (m[0] === '8') {\n    m = '+7' + m.slice(1);\n  }\n  return m\n}\n\nexport function formatCardId(cardid) {\n  if (cardid.length !== 5) {\n    return cardid;\n  }\n\n  cardid = \"8888888\" + cardid;\n\n  let even_sum = 0;\n  let odd_sum = 0;\n  for (let i = 0; i < cardid.length; i++) {\n    if (i % 2 === 0) even_sum += cardid[i] - '0';\n    else odd_sum += cardid[i] - '0';\n  }\n\n  let sum = odd_sum * 3 + even_sum;\n  let s = sum % 10;\n  let control = 0;\n  if (s !== 0) control = 10 - s;\n\n  return cardid + control;\n}\n\nexport function formatAccessibleFor(accessibleFor) {\n  if (accessibleFor.length === 4) {\n    return \"Доступны для всех соляриев\";\n  }\n  if (accessibleFor.length === 0) {\n    return \"Недоступны для всех соляриев\";\n  }\n  let s = \"Доступны для \";\n  for (let i = 0; i < accessibleFor.length - 2; i++) {\n    s += accessibleFor[i] + \", \";\n  }\n  if (accessibleFor.length >= 2) {\n    s += accessibleFor[accessibleFor.length - 2] + \" и \" + accessibleFor[accessibleFor.length - 1];\n  } else {\n    s += accessibleFor[accessibleFor.length - 1];\n  }\n  s += \" солярия\";\n  return s;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\";\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport FormStatus from \"@vkontakte/vkui/dist/components/FormStatus/FormStatus\";\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\n\nimport { formatCardId, trimMobile } from \"./../utils\"; \n\nclass CreateCardPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputCardId: \"\",\n      inputMobile: \"\",\n\n      errorMessage: null,\n      errorHeader: null,\n    };\n  }\n\n  onCardIdChanged = (e) => {\n    let value = e.target.value;\n    \n    if (!this.isCardIdContainsOnlyDigits(value)) return;\n    if (value.length > 32) return;\n\n    this.setState(() => ({inputCardId: value, errorHeader: null}));\n  }\n\n  onMobileChanges = (e) => {\n    let value = e.target.value;\n\n    if (!this.isMobileContainsDigitsOrSpecialSymbols(value)) return;\n    if (value.length > 32) return;\n\n    this.setState(() => ({inputMobile: value, errorHeader: null}));\n  }\n\n  onAddClick = () => {\n    const {inputCardId, inputMobile} = this.state;\n    \n    if (inputCardId.length === 0) {\n      this.setState(() => ({errorHeader: \"Некорректный номер карты\", errorMessage: \"Поле с номером карты должно быть заполнено\"}));\n      return;\n    } else if (inputMobile.length === 0) {\n      this.setState(() => ({errorHeader: \"Некорректный номер телефона\", errorMessage: \"Поле с номером телефона должно быть заполнено\"}));\n      return;\n    }\n\n    let cardId = formatCardId(inputCardId);\n    let mobile = trimMobile(inputMobile);\n    this.props.updateCard(mobile, cardId);\n    //this.props.goToPanel(\"CardInfoPanel\");\n  }\n\n  isCardIdContainsOnlyDigits = (cardId) => /^\\d*$/.test(cardId);\n\n  isMobileContainsDigitsOrSpecialSymbols = (mobile) => /^[\\d()+\\- ]*$/.test(mobile)\n\n  render() {\n    const {inputCardId, inputMobile, errorHeader, errorMessage} = this.state;\n\n    return (\n      <Panel id=\"CreateCardPanel\">\n        <PanelHeader left={<PanelHeaderBack onClick={() => window.history.back()} />}>Добавление карты</PanelHeader>\n        <FormLayout>\n          {errorHeader !== null ? <FormStatus header={errorHeader} mode=\"error\">{errorMessage}</FormStatus> : null}\n          <Input top=\"Номер карты\" onChange={this.onCardIdChanged} value={inputCardId} placeholder=\"12345\"/>\n          <Input top=\"Номер телефона\" onChange={this.onMobileChanges} value={inputMobile} placeholder=\"+79991234567\"/>\n          <Button size=\"xl\" onClick={this.onAddClick}>Добавить карту</Button>\n        </FormLayout>\n      </Panel>\n    );\n  }\n}\n\nCreateCardPanel.propTypes = {\n  goToPanel: PropTypes.func.isRequired,\n  updateCard: PropTypes.func.isRequired,\n}\n\nexport default CreateCardPanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Title from \"@vkontakte/vkui/dist/components/Typography/Title/Title\";\nimport Text from \"@vkontakte/vkui/dist/components/Typography/Text/Text\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\n\nclass CardInfoPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <div style={{textAlign: \"center\", marginTop: \"16px\", width: \"80%\", marginLeft: \"auto\", marginRight: \"auto\"}}>\n        <Icon56ErrorOutline style={{marginLeft: \"auto\", marginRight: \"auto\", marginBottom: \"16px\", color: \"var(--button_primary_background)\"}}/>\n        <Title level=\"2\" weight=\"semibold\" style={{marginBottom: \"8px\"}}>У вас еще нет карты.</Title>\n        <Text weight=\"regular\" style={{marginBottom: \"32px\"}}>Добавить карту клиента можно указав её номер и мобильный телефон</Text>\n        <Button size=\"m\" onClick={() => this.props.goToPanel(\"CreateCardPanel\")}>Добавить карту</Button>\n      </div>\n    );\n  }\n}\n\nCardInfoPlaceholder.propTypes = {\n  goToPanel: PropTypes.func.isRequired,\n}\n\nexport default CardInfoPlaceholder;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport PanelHeaderContent from \"@vkontakte/vkui/dist/components/PanelHeaderContent/PanelHeaderContent\";\nimport PanelHeaderContext from \"@vkontakte/vkui/dist/components/PanelHeaderContext/PanelHeaderContext\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\nimport Header from \"@vkontakte/vkui/dist/components/Header/Header\";\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\nimport ModalRoot from \"@vkontakte/vkui/dist/components/ModalRoot/ModalRoot\";\nimport ModalPage from \"@vkontakte/vkui/dist/components/ModalPage/ModalPage\";\nimport ModalPageHeader from \"@vkontakte/vkui/dist/components/ModalPageHeader/ModalPageHeader\";\nimport PanelHeaderButton from \"@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton\";\nimport InfoRow from \"@vkontakte/vkui/dist/components/InfoRow/InfoRow\";\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28MailOutline from '@vkontakte/icons/dist/28/mail_outline';\nimport Icon24Cancel from \"@vkontakte/icons/dist/24/cancel\";\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\n\nimport { IS_PLATFORM_ANDROID, IS_PLATFORM_IOS } from \"@vkontakte/vkui/dist/\"\n\nimport CardInfoPlaceholder from \"./../comps/CardInfoPlaceholder\";\n\nimport { toShortCardId, getGWordSuffix, getMWordSuffix, formatAccessibleFor } from \"./../utils\";\n\nclass CardInfoPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      contextOpened: false,\n    };\n  }\n\n\n\n  toggleContext = () => {\n    this.setState((pv) => ({contextOpened: !pv.contextOpened}));\n  }\n\n  generateModal = (minutes, expireDate, accessibleFor) => {\n    let modal = \n      <ModalRoot activeModal=\"this\">\n        <ModalPage \n          id=\"this\" \n          onClose={() => window.history.back()}\n          header={<ModalPageHeader\n            left={IS_PLATFORM_ANDROID && <PanelHeaderButton onClick={() => window.history.back()}><Icon24Cancel /></PanelHeaderButton>}\n            right={IS_PLATFORM_IOS ? <PanelHeaderButton onClick={() => window.history.back()}><Icon24Dismiss /></PanelHeaderButton> : null}\n          >Абонемент</ModalPageHeader>}>\n          \n          <Group>\n            <List>\n              <SimpleCell>\n                <InfoRow header=\"Количество минут\">\n                  {minutes + \" минут\" + getGWordSuffix(minutes)}\n                </InfoRow>\n              </SimpleCell>\n\n              <SimpleCell>\n                <InfoRow header=\"Действителен до\">\n                  {expireDate}\n                </InfoRow>\n              </SimpleCell>\n\n              <SimpleCell>\n                <InfoRow header=\"Доступность\">\n                  {formatAccessibleFor(accessibleFor)}\n                </InfoRow>\n              </SimpleCell>  \n              <SimpleCell disabled></SimpleCell>  \n            </List>\n          </Group>\n        </ModalPage>\n      </ModalRoot>\n\n    return modal;\n  }\n\n  render() {\n    const {card} = this.props;\n\n    if (card === null) {\n      return (\n        <Panel id=\"CardInfoPanel\">\n          <PanelHeader>Карта</PanelHeader>\n          <CardInfoPlaceholder goToPanel={this.props.goToPanel} />\n        </Panel>\n      )\n    }\n\n    let smCells = [];\n    for (let i = 0; i < card[\"SaleMinutes\"].length; i++) {\n      let sm = card[\"SaleMinutes\"][i];\n      let cell = <SimpleCell key={i} after={<Icon24Chevron />} onClick={() => {this.props.addToHistory(\"modal\"); this.props.changeModal(this.generateModal(sm[\"Minutes\"], sm[\"ExpireDate\"], sm[\"AccessibleFor\"]))}}>{sm[\"Minutes\"] + \" минут\" + getGWordSuffix(sm[\"Minutes\"])}</SimpleCell> \n      smCells.push(cell);\n    }\n\n    let pCells = [];\n    for (let i = 0; i < card[\"Presents\"].length; i++) {\n      let p = card[\"Presents\"][i];\n      let cell = <SimpleCell key={i} description={\"Действует до \" + p[\"ExpireDate\"]}>{p[\"Name\"]}</SimpleCell>\n      pCells.push(cell);\n    }\n      \n\n    return (\n      <Panel id=\"CardInfoPanel\">\n        <PanelHeader>\n          <PanelHeaderContent \n            aside={<Icon16Dropdown style={{ transform: `rotate(${this.state.contextOpened ? '180deg' : '0'})` }} />}\n            onClick={this.toggleContext}\n          >\n            {\"Карта № \" + toShortCardId(card[\"CardId\"])}\n          </PanelHeaderContent>\n        </PanelHeader>\n        <PanelHeaderContext opened={this.state.contextOpened} onClose={this.toggleContext}>\n          <List>\n            <SimpleCell before={<Icon28SettingsOutline />} onClick={() => this.props.goToPanel(\"CreateCardPanel\")}>Изменить карту</SimpleCell>\n            <SimpleCell before={<Icon28MailOutline />} onClick={() => this.props.goToPanel(\"ContactsPanel\")}>Контакты</SimpleCell>\n          </List>\n        </PanelHeaderContext>\n        \n\n        <Group header={<Header mode=\"secondary\">Основная информация</Header>}>\n          <List>\n            <SimpleCell description={card[\"SaleComment\"]}>{\"Скидка — \" + card[\"Sale\"] + \" процент\" + getMWordSuffix(card[\"Sale\"])}</SimpleCell>\n            <SimpleCell description=\"До 28.28.2288\">{\"Сумма на счету — \" + card[\"Money\"] + \" руб.\"}</SimpleCell>\n            <SimpleCell description={\"Всего в солярии проведено \" + card[\"TotalMinutes\"] + \" минут\" + getGWordSuffix(card[\"TotalMinutes\"])}>{\"Накоплено \" + 42 + \" балл\" + getMWordSuffix(42)}</SimpleCell>\n          </List>\n        </Group>\n\n        <Group header={<Header mode=\"secondary\">Абонементы</Header>}>\n          <List>\n            {smCells.length ? smCells : <SimpleCell>Абонементов пока что нет</SimpleCell>}\n          </List>\n        </Group>\n\n        <Group header={<Header mode=\"secondary\">Подарки</Header>}>\n          <List>\n            {pCells.length ? pCells : <SimpleCell>Подарков пока что нет</SimpleCell>}\n          </List>\n        </Group>\n\n      </Panel>\n    );\n  }\n}\n\nCardInfoPanel.propTypes = {\n  goToPanel: PropTypes.func.isRequired,\n  changeModal: PropTypes.func.isRequired,\n  addToHistory: PropTypes.func.isRequired,\n  card: PropTypes.object,\n}\n\nexport default CardInfoPanel;\n","import React from 'react';\n\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport PanelHeaderBack from \"@vkontakte/vkui/dist/components/PanelHeaderBack/PanelHeaderBack\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport List from \"@vkontakte/vkui/dist/components/List/List\";\nimport Snackbar from \"@vkontakte/vkui/dist/components/Snackbar/Snackbar\";\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\nimport Icon28UsersOutline from '@vkontakte/icons/dist/28/users_outline';\nimport Icon28PhoneOutline from '@vkontakte/icons/dist/28/phone_outline';\nimport Icon28MailOutline from '@vkontakte/icons/dist/28/mail_outline';\nimport Icon28PlaceOutline from '@vkontakte/icons/dist/28/place_outline';\n\nimport bridge from \"@vkontakte/vk-bridge\";\n\nclass ContactsPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      snackbar: null,\n    };\n  }\n\n  changeSnackbar = (text) => {\n    let snackbar = null;\n    if (text !== null) {\n      snackbar =  <Snackbar onClose={() => this.changeSnackbar(null)}>{text}</Snackbar>;\n    }\n    this.setState(() => ({snackbar: snackbar}));\n  }\n\n  render() {\n    return (\n      <Panel id=\"ContactsPanel\">\n        <PanelHeader left={<PanelHeaderBack onClick={() => window.history.back()} />}>Контакты</PanelHeader>\n        \n        <Group>\n          <List>\n            <SimpleCell \n              before={<Icon28UsersOutline />} \n              target=\"_blank\"\n              href=\"https://vk.com/club27450268\">\n              Сообщество PARADISE SUN</SimpleCell>\n\n            <SimpleCell \n              before={<Icon28PhoneOutline />} \n              onClick={() => {\n                bridge.send(\"VKWebAppCopyText\", {\"text\": \"+7 917 802-13-33\"});\n                this.changeSnackbar(\"Скопировано!\");\n              }}>\n              +7 917 802-13-33</SimpleCell>\n\n            <SimpleCell \n              before={<Icon28MailOutline />} \n              onClick={() => {\n                bridge.send(\"VKWebAppCopyText\", {\"text\": \"paradise.sun@mail.ru\"});\n                this.changeSnackbar(\"Скопировано!\");\n              }}>\n              paradise.sun@mail.ru</SimpleCell>\n\n            <SimpleCell \n              before={<Icon28PlaceOutline />} \n              onClick={() => {\n                bridge.send(\"VKWebAppCopyText\", {\"text\": \"г. Салават, ул. Калинина д. 82A\"});\n                this.changeSnackbar(\"Скопировано!\");\n              }}>\n              г. Салават, ул. Калинина д. 82A</SimpleCell>\n          </List>\n        </Group>\n\n        {this.state.snackbar}\n      </Panel>\n    );\n  }\n}\n\nexport default ContactsPanel;\n","import React from 'react';\n\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport Alert from \"@vkontakte/vkui/dist/components/Alert/Alert\";\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport bridge from \"@vkontakte/vk-bridge\";\n\nimport CreateCardPanel from './panels/CreateCardPanel';\nimport CardInfoPanel from './panels/CardInfoPanel';\nimport ContactsPanel from './panels/ContactsPanel';\n\nimport { load } from './utils';\nimport { ConfigProvider } from '@vkontakte/vkui';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: \"CardInfoPanel\",\n\t\t\tpopout: null,\n\t\t\tmodal: null,\n\n\t\t\tscheme: 'bright_light',\n\t\t\thistory: [\"CardInfoPanel\"],\n\t\t\t\n\t\t\tcard: null,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"popstate\", () => this.goBack());\n\n\t\tbridge.subscribe(({detail: {type, data}}) => {\n\t\t\tconsole.log(\"[vkb]:\", type, data);\n\n\t\t\tif (type === \"VKWebAppUpdateConfig\") {\n\t\t\t\tthis.setState(() => ({scheme: data.scheme ? data.scheme : 'bright_light'}));\n\t\t\t}\n\t\t\t\n\t\t\tif (type === \"VKWebAppStorageGetResult\") {\n\t\t\t\tlet mobile = null;\n\t\t\t\tlet cardId = null;\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tif (data.keys[i].key === \"mobile\") mobile = data.keys[i].value;\n\t\t\t\t\telse if (data.keys[i].key === \"cardId\") cardId = data.keys[i].value;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(\"get storage\", mobile, cardId);\n\t\t\t\tif (mobile && cardId) {\n\t\t\t\t\tthis.updateCard(mobile, cardId);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tbridge.send(\"VKWebAppStorageGet\", {\"keys\": [\"mobile\", \"cardId\"]});\n\t\t//this.updateCard();\n\t}\n\n\tupdateCard = (mobile, cardId) => {\n\t\tthis.changePopout(<ScreenSpinner />);\n\t\tload(cardId, mobile)\n\t\t\t.then(card => {\n\t\t\t\tthis.setState(() => ({card: card}));\n\t\t\t\tconsole.log(card);\n\t\t\t\tbridge.send(\"VKWebAppStorageSet\", {\"key\": \"mobile\", \"value\": mobile});\n\t\t\t\tbridge.send(\"VKWebAppStorageSet\", {\"key\": \"cardId\", \"value\": cardId});\n\t\t\t\tthis.changePopout(null);\n\t\t\t\tthis.goToPanel(\"CardInfoPanel\");\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tif (err === 404) {\n\t\t\t\t\tthis.changePopout(<Alert actions={[{title: \"Хорошо\", autoclose: true}]} onClose={() => this.changePopout(null)}><h2>Карта не найдена</h2><p>Не удалось найти карту с данными номерами телефона и карты. Проверьте введённые данные и попробуйте ещё раз</p></Alert>);\n\t\t\t\t} else {\n\t\t\t\t\tthis.changePopout(<Alert actions={[{title: \"Попробовать ещё\", autoclose: true}]} onClose={() => this.updateCard()}><h2>Ошибка подключения</h2><p>Не удалось получить ответ от сервера. Проверьте подключение к интернету и попробуйте ещё раз</p></Alert>);\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tchangePanel = (panel) => {\n\t\tthis.setState(() => ({activePanel: panel}));\n\t}\n\n\tchangePopout = (popout) => {\n\t\tthis.setState(() => ({popout: popout}));\n\t}\n\n\tchangeModal = (modal) => {\n\t\tthis.setState(() => ({modal: modal}));\n\t}\n\n\tgoToPanel = (panel) => {\n\t\twindow.history.pushState({panel: panel}, panel);\n\n\t\tthis.setState((pv) => ({activePanel: panel, history: [...pv.history, panel]}), console.log(this.state.history));\n\t}\n\n\taddToHistory = (panel) => {\n\t\twindow.history.pushState({panel: panel}, panel);\n\n\t\tthis.setState((pv) => ({history: [...pv.history, panel]}), console.log(this.state.history));\n\t}\n\n\tgoBack = () => {\n\t\tlet history = this.state.history;\n\n\t\tif (history.length === 1) {\n\t\t\tbridge.send(\"VKWebAppClose\", {\"status\": \"success\"});\n\t\t} else if (history.length > 1) {\n\t\t\tlet last = history[history.length - 1];\n\t\t\thistory.pop();\n\t\t\tif (last !== \"modal\") {\n\t\t\t\tthis.setState(() => ({activePanel: history[history.length - 1]}));\n\t\t\t} else {\n\t\t\t\tthis.changeModal(null);\n\t\t\t}\n\t\t} \n\t}\n\n\trender() {\n\t\tconst {activePanel, popout, modal, scheme, card} = this.state;\n\t\n\t\treturn (\n\t\t\t<ConfigProvider isWebView={true} scheme={scheme}>\n\t\t\t\t<View \n\t\t\t\t\tactivePanel={activePanel}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tonSwipeBack={this.goBack}\n\t\t\t\t\tpopout={popout}\n\t\t\t\t\tmodal={modal}>\n\t\t\t\t\t<CreateCardPanel id=\"CreateCardPanel\" goToPanel={this.goToPanel} updateCard={this.updateCard} />\n\t\t\t\t\t<CardInfoPanel id=\"CardInfoPanel\" goToPanel={this.goToPanel} changeModal={this.changeModal} addToHistory={this.addToHistory} card={card} />\n\t\t\t\t\t<ContactsPanel id=\"ContactsPanel\" />\n\t\t\t\t</View>\n\t\t\t</ConfigProvider>\n\t\t)\n\t}\n}\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nimport(\"./eruda\").then(({ default: eruda }) => {}); //runtime download"],"sourceRoot":""}